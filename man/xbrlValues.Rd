% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api.R
\name{xbrlValues}
\alias{xbrlValues}
\title{Values}
\usage{
xbrlValues(AccessionID = NULL, Accession = NULL, CIK = NULL,
  Restated = NULL, Element = NULL, Axis = NULL, Member = NULL,
  Dimension = NULL, DimReqd = NULL, ExtensionElement = NULL,
  ExtensionAxis = NULL, ExtensionMember = NULL, Period = NULL,
  StartYear = NULL, NoYears = NULL, Year = NULL, Ultimus = NULL,
  Small = NULL, as_data_frame = TRUE)
}
\arguments{
\item{AccessionID}{Internal Accession identifier used by the XBRL US
database.}

\item{Accession}{Filing accession number. This is the accession number used
as the filing identifier used by the SEC.}

\item{CIK}{CIK of the Company. This must be 10 digits in length. Can be a
character vector.}

\item{Restated}{A value of false will exclude amounts subsequently restated,
a value of true will include amounts that were restated. If no value is
defined the API defaults to false.}

\item{Element}{The element name in the base taxonomy. Can be a character
vector.}

\item{Axis}{The XBRL axis element. Can be a vector. If defined the API will
return facts which use this axis. If DimReqd is set to false this parameter
will be ignored}

\item{Member}{The XBRL member element. Can be a vector. If defined the API
will return facts which use this member. If DimReqd is set to false this
parameter will be ignored.}

\item{Dimension}{Axis and member i.e.
DimensionID:IncomeTaxAuthorityAxi:AbasMember. Can be a vector.}

\item{DimReqd}{True returns all facts with and without dimensions associated
with fact, false returns records with no dimensions. If no value is defined
the API defaults to true.}

\item{ExtensionElement}{=[base|extension] - base will return non extension
elements and extension will return extension elements. If no value is
provided then all elements are returned.}

\item{ExtensionAxis}{=[base|extension] - base will return non extension axes
and extension will return extension axes. If no value is provided then all
axes are returned. If DimReqd is set to false this parameter is ignored.}

\item{ExtensionMember}{=[base|extension] - base will return non extension
members and extension will return extension members. If no value is
provided then all members are returned. If DimReqd is set to false this
parameter is ignored.}

\item{Period}{=[Y|1Q|2Q|3Q|3QCUM|4Q|1H|2H|Other] - Period required, if not
provided all periods are returned. This parameter allows a comma separated
list.}

\item{StartYear}{[integer] - First Year of data to return a range used in
conjunction with the Year parameter to define a range.}

\item{NoYears}{[integer] - Use to define the number of years of data returned
based on value provided for Year. For example if NoYears is set to 3 and
Year is set to 2014 then fact values will be returned for 2012, 2013, and
2014. If Year is not provided then NoYears is ignored.}

\item{Year}{Year of the data required}

\item{Ultimus}{[boolean] - True returns the latest value, false returns all
values. If no value is defined the API defaults to true.}

\item{Small}{[boolean] - If this parameter is set to true the number of
columns in response is cut down.}

\item{as_data_frame}{If a data frame is wanted (TRUE by default)}
}
\description{
This API allows the user to fetch XBRL facts from the XBRL US database by
passing financial statement parameters to define the data returned.
}
\details{
All calls to the API must include at least a CIK or Filing Accession
  Number. You can pull data for multiple entities by listing them as comma
  separated values. It's not possible to call all values for an element such
  as Assets as the response will be too large.
}
\examples{
\dontrun{
  xbrlValues(
    CIK="0000732717",
    Element="Assets",
    Period="Y",
    Year=2014,
    NoYears=3,
    DimReqd = FALSE,
    Small = TRUE,
    Ultimus = TRUE
  )
}
}
\references{
\url{https://github.com/xbrlus/data_analysis_toolkit/blob/master/api/xbrlValues.md}
}

